{"version":3,"sources":["services/ProjectService.ts","features/project/ProjectListItem.tsx","features/project/ProjectContainer.tsx","features/project/ProjectContainerProcess.tsx","features/project/ProjectContainerFinish.tsx","features/HomePage.tsx","hooks/redux.ts","features/project/ProjectDetails.tsx","features/CardPage.tsx","features/project/ModalWindow.tsx","features/project/SearchBar.tsx","features/Header.tsx","features/project/Footer.tsx","App.tsx","features/project/projectSlice.tsx","features/counter/counterSlice.ts","store/store.tsx","index.tsx"],"names":["projectAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","build","fetchAllProjects","query","limit","url","params","_limit","providesTags","result","fetchProjectById","id","method","fetchProjectByNameSearch","searchText","createProject","mutation","project","body","invalidatesTags","updateProject","deleteProject","ProjectListItem","Card","Body","className","src","imageUrl","width","alt","Title","title","Text","replace","to","role","ProjectContainer","useState","useFetchAllProjectsQuery","projects","data","error","isLoading","border","style","Header","color","as","height","overflow","filter","status","map","HomePage","display","margin","padding","ProjectContainerProcess","ProjectContainerFinish","useAppSelector","useSelector","ProjectDetails","update","remove","state","counterReducer","value","useDispatch","aria-label","cursor","background","borderRadius","Img","variant","Button","onClick","event","prompt","stopPropagation","window","confirm","location","href","CardPage","useUpdateProjectMutation","UpdateError","UpdateIsLoading","useDeleteProjectMutation","DeleteError","DeleteIsLoading","useParams","useFetchProjectByIdQuery","console","log","ModalWindow","nameButton","children","onHandleSubmit","disabled","show","setShow","handleClose","Modal","onHide","closeButton","Footer","SearchBar","filterData","setFilterData","wordEntered","setWordEntered","clearSearchState","Form","paddingLeft","justifyContent","alignItems","backgroundColor","type","outline","placeholder","onChange","searchWord","target","newFilter","toLowerCase","includes","textTransform","borderStyle","length","position","textDecoration","defaultFormValues","useCreateProjectMutation","CreateError","CreateIsLoading","projectInput","setProjectInput","isDirty","setIsDirty","validationState","isInvalid","message","getFieldValidation","fieldName","x","some","messages","getFormIsValid","handleCreate1","a","Navbar","bg","expand","fixed","Container","fluid","Toggle","aria-controls","Collapse","Nav","maxHeight","navbarScroll","action","htmlFor","e","data-mdb-ripple-color","App","exact","path","component","projectSlice","createSlice","name","initialState","reducers","counterSlice","increase","decrease","actions","rootReducer","combineReducers","productReducer","reducer","store","configureStore","middleware","getDefaultMiddleware","concat","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c5691f71.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nimport { IProject } from \"../models/IProject\";\n\n\nexport const projectAPI = createApi({\n    reducerPath: 'projectAPI',\n    baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:5000/' }),\n    tagTypes: ['Project'],\n    endpoints: (build) => ({\n        fetchAllProjects: build.query<IProject[], number>({\n            query: (limit: number = 10) => ({\n                url: `/projects`,\n                params: {\n                    _limit: limit\n                }\n            }),\n            providesTags: result => ['Project']\n        }),\n        fetchProjectById: build.query<IProject, number>({\n            query: (id) => ({\n                url: `/projects/${id}`,\n                method: 'GET',\n            }),\n            providesTags: result => ['Project']\n        }),\n        fetchProjectByNameSearch: build.query<IProject[], string>({\n            query: (searchText: string) => ({\n                url: `/projects?q=${searchText}`,\n                method: 'GET',\n            }),\n            providesTags: result => ['Project']\n        }),\n        createProject: build.mutation<IProject, IProject>({\n            query: (project) => ({\n                url: `/projects`,\n                method: 'POST',\n                body: project\n\n            }),\n            invalidatesTags:  ['Project']\n        }),\n        updateProject: build.mutation<IProject, IProject>({\n            query: (project) => ({\n                url: `/projects/${project.id}`,\n                method: 'PUT',\n                body: project\n\n            }),\n            invalidatesTags:  ['Project']\n        }),\n        deleteProject: build.mutation<IProject, IProject>({\n            query: (project) => ({\n                url: `/projects/${project.id}`,\n                method: 'DELETE'\n            }),\n            invalidatesTags:  ['Project']\n        }),\n\n    })\n})","// import React, {FC} from 'react';\nimport {Card} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n// import { IProject } from '../../models/IProject';\n// import { lineClamp } from '@tailwindcss/line-clamp';\n\n\n\n// interface ProjectListItem {\n//     project: IProject;\n//     // update: (project: IProject) => void;\n//     // remove: (project: IProject) => void;\n// }\n\nconst ProjectListItem = ({ project }) => {\n\n    return (\n        <div>\n            \n            <Card >\n                <Card.Body >\n                      <img className=\"ml-3\" src={project.imageUrl} width='96px' alt=\"Generic placeholder image\"/>\n    \n                    <Card.Title>{project.id}. {project.title}</Card.Title>\n                    <Card.Text >\n                    {/* className=\"${tw`${lineClamp(3)}`}\" */}\n                    {project.body.replace(/(.{58})..+/, `$1...`)}  \n                            {/* {project.body} */}\n                    </Card.Text>\n                    <Link to={`/card/${project.id}`} role=\"button\">More to</Link>\n                </Card.Body>\n            </Card>\n            <div className=\"media\"\n           \n            >\n                {/* {project.id}. {project.title} */}\n                {/* <button onClick={handleDelete}>delete</button> */}\n                {/* <button onClick={handleUpdate}>edit</button> */}\n                {/* <button  href=\"/card/id\" >details</button> */}\n                {/* <Link to={`/card/${project.id}`} role=\"button\">Detailes</Link> */}\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectListItem\n","import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { projectAPI } from \"../../services/ProjectService\"\nimport ProjectListItem from \"./ProjectListItem\"\n\nconst ProjectContainer = () => {\n\n    const [limit, setLimit] = useState(15);\n    const { data: projects, error, isLoading } = projectAPI.useFetchAllProjectsQuery(limit);\n    // const [createProject, { error: CreateError, isLoading: CreateIsLoading }] = projectAPI.useCreateProjectMutation()\n    // const [deleteProject, { }] = projectAPI.useDeleteProjectMutation();\n    // const [updateProject, { }] = projectAPI.useUpdateProjectMutation();\n\n\n    // const handleCreate = async () => {\n    //     const title = prompt();\n    //     await createProject({ title, body: title } as IProject)\n\n    // }\n    // const handleUpdate = (project: IProject) => {\n    //     updateProject(project)\n    // }\n    // const handleRemove = (project: IProject) => {\n    //     deleteProject(project)\n    // }\n\n    return (\n        <div >\n            <Card border=\"success\" style={{ width: '18rem' }}>\n            <Card.Header style={{ color: \"green\"}} as=\"h6\" >Active</Card.Header>        \n            <div style={{ height: \"42em\", overflow: \"auto\" }}>\n                {isLoading && <h1>Loading...</h1>}\n                {error && <h1>Error download...</h1>}\n                {projects && projects.filter(project => project.status === \"active\").map(project =>\n                    <ProjectListItem project={project} key={project.id} />\n                )}\n            </div>\n        </Card>\n        </div>\n    )\n}\n\nexport default ProjectContainer\n","import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { projectAPI } from \"../../services/ProjectService\"\nimport ProjectListItem from \"./ProjectListItem\"\n\nconst ProjectContainer = () => {\n\n    const [limit, setLimit] = useState(10);\n    const { data: projects, error, isLoading } = projectAPI.useFetchAllProjectsQuery(limit);\n    \n    return (\n        <div >\n           \n            <Card border=\"warning\" style={{ width: '18rem' }}>\n                <Card.Header style={{ color: \"#FFB700\" }} as=\"h6\" >Process</Card.Header>\n                <div style={{ height: \"42em\", overflow: \"auto\" }}>\n                    {isLoading && <h1>Loading...</h1>}\n                    {error && <h1>Error download...</h1>}\n                    {projects && projects.filter(project => project.status == \"process\").map(project =>\n                    <ProjectListItem project={project} key={project.id} />\n                )}\n                    \n                     \n                </div>\n            </Card>\n        </div>\n\n    )\n}\n\nexport default ProjectContainer\n","import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { projectAPI } from \"../../services/ProjectService\"\nimport ProjectListItem from \"./ProjectListItem\"\n\nconst ProjectContainer = () => {\n\n    // const [limit, setLimit] = useState(10);\n    const { data: projects, error, isLoading } = projectAPI.useFetchAllProjectsQuery(10);\n    \n    return (\n        <div >\n            <Card border=\"info\" style={{ width: '18rem' }}>\n                <Card.Header style={{ color: \"#03C5EE\" }} as=\"h6\" >Finish</Card.Header>\n                <div style={{ height: \"42em\", overflow: \"auto\" }}>\n                    {isLoading && <h1>Loading...</h1>}\n                    {error && <h1>Error download...</h1>}\n                    {projects && projects.filter(project => project.status == \"finish\").map(project =>\n                    <ProjectListItem project={project} key={project.id} />\n                )}\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default ProjectContainer\n","// import React from \"react\";\nimport { RootStateOrAny, useDispatch, useSelector } from \"react-redux\";\nimport { decrease, increase } from \"./counter/counterSlice\";\nimport { useAppSelector } from \"../hooks/redux\";\nimport ProjectContainer from \"./project/ProjectContainer\";\nimport ProjectContainerProcess from \"./project/ProjectContainerProcess\";\nimport ProjectContainerFinish from \"./project/ProjectContainerFinish\";\nimport SearchBar from \"./project/SearchBar\";\n\nconst HomePage = () => {\n\n  // const value = useAppSelector(state => state.counterReducer.value);\n  // const dispatch = useDispatch();\n\n  return (\n    <div style={{ display: 'flex' }}>\n\n      {/* <div style={{ margin: '4%' }}><h1>{value}</h1>\n        <button onClick={() => dispatch(increase())}> increase </button>\n        <button onClick={() => dispatch(decrease())}> decrease </button>\n      </div > */}\n\n      <span style={{ display: 'flex', margin: '70px 50px 30px 14.5em', padding: 'right:30px' }} >\n        <span style={{ margin: '0 2%' }}>\n          <ProjectContainer />\n        </span>\n        <span style={{ margin: '0 2%' }}>\n          <ProjectContainerProcess />\n        </span>\n        <span style={{ margin: '0 2%' }}>\n          <ProjectContainerFinish />\n        </span>\n      </span>\n    </div>\n  );\n};\n\nexport default HomePage;\n","\n\nimport {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \"../store/store\";\n\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { Button, Card } from \"react-bootstrap\"\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport { IProject } from \"../../models/IProject\"\nimport { decrease, increase } from \"../counter/counterSlice\";\n\ninterface ProjectDetails {\n    project: IProject,\n    update: (project: IProject) => void;\n    remove: (project: IProject) => void;\n}\n\nconst ProjectDetails: React.FC<ProjectDetails> = ({ project, update, remove }) => {\n\n    const value = useAppSelector(state => state.counterReducer.value);\n    const dispatch = useDispatch();\n\n    const handleUpdate = (event: React.MouseEvent) => {\n\n        const title = prompt();\n        if (title) {\n            if (title !== '') {\n                update({ ...project, title } as IProject)\n            } else return\n        } else {\n            return\n        }\n\n    }\n    const handleDelete = (event: React.MouseEvent) => {\n        event.stopPropagation();\n        if (window.confirm(\"Really delete this project?\")) {\n            remove(project);\n            window.location.href = \"/\";\n        } else return\n    };\n   \n\n    return (\n        <div  >\n            <Card style={{ width: '70%' }}  >\n                \n                <Link aria-label=\"Close\"\n                    className=\"position-absolute top-0 end-0\"\n                    to=\"/\"\n                    style={{\n                        color: \"black\",\n                        margin: '0.5em 0.5em 0.5em ',\n                        cursor: \"pointer\",\n                        width: \"3%\",\n                        background: 'white',\n                        borderRadius: \"5px\",\n                    }} ><i className=\"bi bi-x-lg\"  style={{margin: '0.2em 0.2em 0.5em ',}}></i>\n                </Link>\n                \n                {/* <div style={{ margin: '4%' }}><h1>{value}</h1>\n                    <button className=\"me-2\" onClick={() => dispatch(decrease())}>-</button>\n                    <button onClick={() => dispatch(increase())}>+</button>\n                </div > */}\n\n                <Card.Img variant=\"top\" src={project.imageUrl} />\n                {/* <img  /> */}\n                <Card.Body>\n                    <Card.Title> {project.id}. {project.title}</Card.Title>\n\n                    <Card.Text>\n                        {project.body}\n                    </Card.Text>\n                    <Button variant=\"primary\" className=\"me-2\" onClick={handleUpdate}>Edit</Button>\n                    <Button variant=\"primary\" onClick={handleDelete} >Delete</Button>\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default ProjectDetails\n","import ProjectDetails from \"./project/ProjectDetails\";\nimport { IProject } from \"../models/IProject\";\nimport { useParams } from 'react-router-dom';\nimport { projectAPI } from \"../services/ProjectService\";\n\n// interface CardPage {\n//     project: IProject\n// }\n\nconst CardPage= () => {\n\n    const [updateProject, {error: UpdateError, isLoading: UpdateIsLoading }] = projectAPI.useUpdateProjectMutation();\n    const [deleteProject, {error: DeleteError, isLoading: DeleteIsLoading }] = projectAPI.useDeleteProjectMutation();\n\n\n    let { id } = useParams<{ id }>();\n    const { data: project, error, isLoading } = projectAPI.useFetchProjectByIdQuery(id);\n    console.log(project);\n\n    const erroeMassege = () => {\n        return (<h1>\"Can not fetch details\"</h1>)\n    }\n    console.log('id', id);\n\n    const handleUpdate = (project: IProject) => {\n        updateProject(project)\n    }\n    const handleRemove = (project: IProject) => {\n        deleteProject(project)\n    }\n\n    return (\n            <div style={{ margin: '5% 2% 30% 20%' }}>\n                {error && <h1>Error find...</h1>}\n                {isLoading && <h1>Loading find by id project...</h1>}\n                {DeleteError && <h1>Error delete...</h1>}\n                {DeleteIsLoading && <h1>Loading Delete project...</h1>}\n                {UpdateError && <h1>Error update...</h1>}\n                {UpdateIsLoading && <h1>Loading update project...</h1>}\n                {(project) ? <ProjectDetails project={project}  update={handleUpdate}  remove={handleRemove} /> : erroeMassege()}\n            </div>\n    )\n}\n\nexport default CardPage\n","\nimport { Button, Modal } from \"react-bootstrap\"\nimport { useState } from \"react\";\n\n\nconst ModalWindow = ({ title, nameButton, children, onHandleSubmit, disabled }) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const onSubmit = () => {\n        onHandleSubmit();\n        setShow(false);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outline-success\" className=\"me-2\" onClick={handleShow}>\n                {title}\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {children}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                   \n                    <Button variant=\"primary\"\n                        disabled={disabled}\n                        onClick={onSubmit} >\n                        {nameButton}\n                    </Button>\n                    \n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default ModalWindow\n","import { Button, Card, Form, FormControl, FormFloating } from \"react-bootstrap\"\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport { projectAPI } from \"../../services/ProjectService\";\nimport { IProject } from \"../../models/IProject\";\n\n\nconst SearchBar = () => {\n\n    const [filterData, setFilterData] = useState([] as any);\n    const [wordEntered, setWordEntered] = useState(\"\");\n    const { data: projects, error, isLoading } = projectAPI.useFetchAllProjectsQuery(15);\n    // , {skip: wordEntered === \"\"}\n\n    const handleFilter = (event) => {\n\n        const searchWord = event.target.value;\n        setWordEntered(searchWord);\n\n        if (searchWord === \"\") {\n            setFilterData([]);\n        } else {\n            const newFilter = projects && projects.filter(project => {\n                return project.title.toLowerCase().includes(searchWord.toLowerCase())\n            });\n            setFilterData(newFilter);\n        }\n    };\n\n    const clearSearchState = () => {\n        setFilterData([]);\n        setWordEntered(\"\");\n    };\n\n    return (\n        <div >\n            <Form className=\"d-flex\" style={{\n                display: \"flex\",\n                // width: \"500px\",\n                // padding: \"2px\",\n                paddingLeft: \"10px\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"auto\",\n                backgroundColor: \"white\",\n                // backgroundColor:\" #fce6ef\",\n                borderRadius: \"5px\",\n                // border: \"1px solid #ffc5dd\",\n                border: \"1px solid green\",\n\n            }}>\n                <input\n                    type=\"text\"\n                    // className=\"   \"\n                    style={{\n                        width: \"100%\",\n                        // height: \"54px\",\n                        background: \"none\",\n                        border: \"0\",\n                        padding: \"0\",\n                        outline: \"none\",\n\n\n                    }}\n                    // type=\"search\"\n                    placeholder=\"Search\"\n                    // className=\"me-2\"\n                    aria-label=\"Search\"\n                    onChange={handleFilter}\n                    value={wordEntered}\n                />\n\n                <Button variant=\"secondary\"\n                    style={{\n                        backgroundColor: \"white\",\n                        color: \"green\",\n                        textTransform: \"uppercase\",\n                        borderStyle: \"none\",\n                        borderRadius: \"5px\",\n                        cursor: \"pointer\",\n                        outline: \"none\",\n                    }}\n                    type=\"button\"\n                    onClick={clearSearchState}>\n                    {wordEntered.length === 0 ? <i className=\"bi bi-search\"></i> : <i className=\"bi bi-x-lg\" ></i>}\n                </Button>\n\n            </Form>\n            {filterData.length != 0 && (\n                <Card className=\"results\" style={{\n                    width: \"12.1em\",\n                    overflow: \"auto\",\n                    position: \"absolute\",\n                }}>\n                    {filterData.map((project) => <Link to={`/card/${project.id}`} onClick={clearSearchState} style={{ textDecoration: \"none\" }}>{project.title}</Link>)}\n                </Card>\n            )\n            }\n        </div>\n    )\n}\n\nexport default SearchBar\n","import { useCallback, useState } from 'react';\nimport { Navbar, Nav, Container, Form, FormControl, Button } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { isJSDocVariadicType } from 'typescript';\nimport { IProject } from '../models/IProject';\nimport { projectAPI } from '../services/ProjectService';\nimport ModalWindow from './project/ModalWindow';\nimport projectSlice from './project/projectSlice';\nimport SearchBar from './project/SearchBar';\n\n// interface Header {\n//     project: IProject\n// }\n\nconst defaultFormValues = {\n    imageUrl: '',\n    title: '',\n    body: ''\n};\n\ntype FieldName = \"title\" | \"body\" | \"imageUrl\";\n\nconst Header = () => {\n\n    const [createProject, { error: CreateError, isLoading: CreateIsLoading }] = projectAPI.useCreateProjectMutation()\n\n    // const handleCreate = async () => {\n    //     const title = prompt();\n    //     if (title === \"\") {\n    //         <h1>Title empty...</h1>\n    //     } else await createProject({ title, body: title, status: \"active\" } as IProject)\n    // }\n\n    // Form =>\n    const [projectInput, setProjectInput] = useState<{ title: string, body: string, imageUrl: string }>(defaultFormValues);\n    const [isDirty, setIsDirty] = useState<{ [id: string]: boolean }>({ title: false });\n\n\n    const validationState: { [id: string]: { isInvalid: boolean, message: string }[] } = {\n        \"title\": [\n            { isInvalid: projectInput.title === \"\", message: \"Title can not be empty\" },\n            { isInvalid: (projectInput.title !== \"\") && projectInput.title?.length < 3, message: \"Title is too short\" },\n        ],\n        \"body\": [\n            { isInvalid: projectInput.body === \"\", message: \"Body can not be empty\" },\n        ]\n    };\n\n    const getFieldValidation = (fieldName: FieldName) => {\n        const result = validationState[fieldName];\n        var isInvalid = result.map(x => x.isInvalid).some(x => x);\n        var messages = result.filter(x => x.isInvalid).map(x => x.message);\n        return {\n            isInvalid: isInvalid,\n            messages\n        }\n    };\n\n    const getFormIsValid = () => {\n        return !getFieldValidation(\"title\").isInvalid &&\n            !getFieldValidation(\"body\").isInvalid;\n    };\n\n    const handleCreate1 = async () => {\n        const title = projectInput.title;\n        const body = projectInput.body;\n\n        if (!getFormIsValid()) {\n            <h1>Input empty...</h1>\n        } else {\n            await createProject({ title, imageUrl: \"https://source.unsplash.com/1600x900/?project-art\", body, status: \"active\" } as IProject);\n            setProjectInput(defaultFormValues);\n        }\n    }\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\"\n            //  sticky=\"top\"\n            fixed=\"top\"\n        >\n            <Container fluid>\n                {/* <Navbar.Brand href=\"/\">Logo</Navbar.Brand> */}\n                <Link to=\"/\" role=\"button\" style={{ textDecoration: \"none\", color: \"black\" }}>Logo</Link>\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                <Navbar.Collapse id=\"navbarScroll\" >\n                    <Nav\n                        className=\"me-auto my-2 my-lg-0\"\n                        style={{ maxHeight: '100px' }}\n                        navbarScroll\n                    >\n                    </Nav>\n                    <SearchBar />\n                    <Nav\n                        className=\"me-auto my-2 my-lg-0\"\n                        style={{ maxHeight: '100px' }}\n                        navbarScroll\n                    >\n                    </Nav>\n\n                    <ModalWindow title=\"Create Project\" nameButton=\"Save\" onHandleSubmit={handleCreate1} disabled={!getFormIsValid()} >\n\n                        <form className=\"row g-3\" action=\"create-form\" >\n                            <div className=\"col-md-4\">\n                                <div className=\"form-outline\">\n                                    <label htmlFor=\"validationDefault01\" className=\"form-label\">Title</label>\n                                    <input\n                                        type=\"text\"\n                                        className='form-control'\n                                        placeholder='title'\n                                        value={projectInput.title || \"\"}\n                                        onChange={e => {\n                                            setProjectInput({ ...projectInput, title: e.target.value });\n                                            setIsDirty({ ...isDirty, \"title\": true });\n                                        }\n                                        }\n                                    />\n                                </div>\n                            </div>\n                            <div style={{ backgroundColor: \"gold\" }}>\n                                {isDirty[\"title\"] && getFieldValidation(\"title\").messages}\n                            </div>\n\n                            <div className=\"\">\n                                <div className=\"form-outline\">\n                                    <label htmlFor=\"validationDefault01\" className=\"form-label\">Body</label>\n                                    <textarea\n                                        // type=\"text\"\n                                        className='form-control'\n                                        placeholder='body'\n                                        value={projectInput.body || \"\"}\n                                        onChange={e => {\n                                            setProjectInput({ ...projectInput, body: e.target.value });\n                                            setIsDirty({ ...isDirty, \"body\": true });\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                            <div style={{ backgroundColor: \"gold\" }}>\n                                {isDirty[\"body\"] && getFieldValidation(\"body\").messages}\n                            </div>\n\n                        </form>\n                    </ModalWindow>\n                    {CreateIsLoading && <h1>Loading create project...</h1>}\n                    {CreateError && <h1>Error creative...</h1>}\n                    {/* <Button variant=\"outline-success\" className=\"me-2\" onClick={handleCreate}>Create Project</Button> */}\n                    <Button variant=\"success\">Log In</Button>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Header\n","\n\nconst Footer = () => {\n    return (\n        <div>\n            <footer className=\"text-center text-white\" style={{backgroundColor: \"#F8F8F8\"}} >\n  {/* <!-- Grid container --> */}\n  <div className=\"container pt-4\">\n    {/* <!-- Section: Social media --> */}\n    <section className=\"mb-4\">\n      {/* <!-- Facebook -->\n      <a\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n        href=\"#!\"\n        role=\"button\"\n        data-mdb-ripple-color=\"dark\"\n        ><i className=\"fab fa-facebook-f\"></i\n      ></a> */}\n\n      {/* <!-- Twitter -->\n      <a\n        class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n        href=\"#!\"\n        role=\"button\"\n        data-mdb-ripple-color=\"dark\"\n        ><i class=\"fab fa-twitter\"></i\n      ></a>\n\n      <!-- Google -->\n      <a\n        class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n        href=\"#!\"\n        role=\"button\"\n        data-mdb-ripple-color=\"dark\"\n        ><i class=\"fab fa-google\"></i\n      ></a> */}\n\n      {/* <!-- Instagram -->\n      <a\n        class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n        href=\"#!\"\n        role=\"button\"\n        data-mdb-ripple-color=\"dark\"\n        ><i class=\"fab fa-instagram\"></i\n      ></a> */}\n\n      {/* <!-- Linkedin --> */}\n      <a\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n        href=\"https://www.linkedin.com/in/yarema-ostrovskiy/\"\n        role=\"button\"\n        data-mdb-ripple-color=\"dark\"\n        ><i className=\"fab fa-linkedin\"></i>\n        <i className=\"bi bi-linkedin\"></i>\n        {/* <i className=\"bi bi-x-lg\" ></i> */}\n      </a>\n      {/* <!-- Github --> */}\n      <a\n        className=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n        href=\"https://github.com/Yarema91/New_redux_product_app\"\n        role=\"button\"\n        data-mdb-ripple-color=\"dark\"\n        >\n            <i className=\"bi bi-github\"></i>\n      </a>\n    </section>\n    {/* <!-- Section: Social media --> */}\n  </div>\n  {/* <!-- Grid container --> */}\n\n  {/* <!-- Copyright --> */}\n  <div className=\"text-center text-dark p-3\" style={{backgroundColor: \"rgba(0, 0, 0, 0.2)\"}}>\n    © 2021 Copyright:\n    {/* <a className=\"text-dark\" href=\"https://mdbootstrap.com/\">MDBootstrap.com</a> */}\n  </div>\n  {/* <!-- Copyright --> */}\n</footer>\n        </div>\n    )\n}\n\nexport default Footer\n","// import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./features/HomePage\";\nimport CardPage from \"./features/CardPage\";\nimport Header from \"./features/Header\";\nimport Footer from \"./features/project/Footer\";\n// import { useAppSelector } from \"./hooks/redux\";\n\n\nconst App = () => {\n    // const {} = useAppSelector(state => state.productReducer.products);\n\n    return (\n       <BrowserRouter>\n        <Header />\n            <Switch>\n                <Route exact\n                    path=\"/\" component={HomePage}\n                />\n                <Route path=\"/card/:id\"\n                    component={CardPage}\n                />\n            </Switch>\n            <Footer />\n\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {  IProject } from \"../../models/IProject\";\n\ninterface projectState {\n    projects: IProject[];\n    isLoading: boolean;\n    error: string;\n} \n\nconst initialState: projectState  = {\n    projects: [],\n    isLoading: false,\n    error: \"\"\n\n            // id: 4,\n            // imageUrl: \"some url here\",\n            // name: \"Product4\",\n            // count: 4,\n            // size: {\n            //     \"width\": 200,\n            //     \"height\": 200\n            // },\n            // weight: \"200g\",\n            // comments: [\"CommentModel\", \"CommentModel\"]\n}\n\n\nexport const projectSlice = createSlice ({\n    name: \"User\",\n    initialState,\n\n    reducers: {\n        projects: (state) => {\n            console.log('projects.state');\n            \n        }\n        // increase: (state) => {\n        //     state.value += 1;\n        //   },\n        //   decrease: (state) => {\n        //     state.value -= 1;\n        //   }\n    }\n})\n\n\n// export const { increase, decrease } = counterSlice.actions;\n\nexport default projectSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\n\n\n\nexport const counterSlice = createSlice ({\n    name: \"counter\",\n    initialState: {\n      value: 0\n    },\n    reducers: {\n        increase: (state) => {\n            state.value += 1;\n          },\n          decrease: (state) => {\n            state.value -= 1;\n          }\n\n    }\n})\n\n\nexport const { increase, decrease } = counterSlice.actions;\n\nexport default counterSlice.reducer;","import { combineReducers, configureStore }  from \"@reduxjs/toolkit\";\n\nimport productReducer from \"../features/project/projectSlice\"\nimport counterReducer from \"../features/counter/counterSlice\";\nimport { projectAPI } from \"../services/ProjectService\";\n\n\nconst rootReducer = combineReducers({\n    productReducer,\n    counterReducer,\n    [projectAPI.reducerPath]: projectAPI.reducer\n})\n\nexport const setupStore = () => {\n    return configureStore({\n        // product: {\n        //     id: 1,\n        //     imageUrl: \"some url here\",\n        //     name: \"Product name\",\n        //     count: 4,\n        //     size: {\n        //         \"width\": 200,\n        //         \"height\": 200\n        //         },\n        //     weight: \"200g\",\n        //     comments: [\"CommentModel\", \"CommentModel\"]\n        // },\n     reducer: rootReducer,\n     middleware: (getDefaultMiddleware) => \n         getDefaultMiddleware().concat(projectAPI.middleware)\n    });\n\n}\n\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']\n \n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport { setupStore } from \"./store/store\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import url(\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.0/font/bootstrap-icons.css\");\n\n\nconst store = setupStore();\n\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}